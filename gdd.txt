Credits:

Icon by Freepik is licensed by CC 3.0 BY
Assets by opengameart.com

Music:
Main theme by Krasen Ivanov
Game win sound by https://freesound.org/people/Tuudurt/sounds/275104/


***

MonoBomber

1. Using github the project is located here:
https://github.com/Krasen007/MonoContra/
1.	You MUST USE a Source Control System - Recommended bitbucket, but you can use anything else you like, for example, TFS, GitHub, TortoiseGit, CodePlex etc.
---
2. Project Manager: Krasen Ivanov
2.	Each team has to choose a Project Manager who will present the game in front of jury. The responsibility of the Project Manager is to help with all aspects of the game development - programming, graphic design, game design, giving out the tasks and keeping the deadlines for the game. The project manager will preferably (but not mandatory) be the most experienced developer in the team. He will be helping with coding the most complicated parts of the game.
---
3. Contra
3.	Choose a team name. 
---
4. GDD:
4.	 You need to create a brief (2-3 pages) GDD which should include the following information:
---
a.
Krasen Ivanov - Static items, animated items, player, player movements, enemy,
States, 

Jeni - bugfixing, powerups
Pavel - blocks
Milcho - ideas
a.	Presentation of the team - names and roles
---
b. 
Bomberman game with new additions like powerups, shootings, new type of walls.
b.	Brief description of the game idea
---
c. 
TODO:
c.	Graphic Design implementation 
---
d.
TODO:
d.	Implementation and algorithms used
---
e.
Classes, Enums, 
e.	Data Structures Used
---
f.
State machine
f.	Design Patterns
---
g.
TODO:
g.	OOP structure
---
h.
more levels, new powerups, new game modes
h.	Future plans and ideas for the game - new modes, levels, functionality, characters, as per your idea.
---
5.
Only original work was used, even clases has been remade by our design.
5.	DO NOT PLAGIARIZE - do not copy paste your games from the internet. Try to create your own simple game. It does not have to be original - e.g. Flappy Bird or a variation of Flappy Bird will be a fine idea, given that you do not copy paste it from the internet. If you do copy, we will know and the whole team will be disqualified from further modules in the course.
---
6.
TODO:
6.	A completely finished game is required. 
---


***
Zariba Game Academy 
OOP & Quality Code Teamwork
Teamwork Specification

General
You have to create your own MonoGame game.
Requirements
***

Programming and Game-specific requirements

1.
Stylecop disabled warnings for documentation.	
1.	StyleCop should yield 0 warnings.
---
2.	YOU MUST USE A SOURCE CONTROL SYSTEM!
3.	YOU MUST NOT MAKE THE SAME GAME AS IN THE LECTURES!
4.	Follow all guidelines for Quality Code, as in the lectures (40% of total score).
5.	Use at least 3 Design Patterns (as in the Monopoly Game and others).
6.	MVC / CLEAN pattern is optional for additional 10%.  (a diagram is required)
7.	Use Abstract Classes, Interfaces, Inheritance, Classes, Constructors, Lambda, 
8.	Include Interesting Algorithms and Data Structures.
9.	Make a completely finished game!!! - each bug, or not implemented functionality will be sanctioned.
10.	You must have the following States Intro, Main Menu, Game, !Pause!, Game Over. You can add others if you’d like.
11.	Additional points will be awarded for functionality, complexity, game idea and so on. Presentation and Deliverables
---
1.	You will have 10-15 minutes to present your game in front of the judges. 
2.	You will be using the equipment in the lecture theatre. 
3.	You should bring your Game and GDD on a flash drive and copy it on the PC.
4.	You can make a short Power Point presentation to help you present your idea (Optional).

Good Luck and Have Fun.